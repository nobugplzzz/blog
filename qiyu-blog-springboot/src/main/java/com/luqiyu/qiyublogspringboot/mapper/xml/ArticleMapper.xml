<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.luqiyu.qiyublogspringboot.mapper.ArticleMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.luqiyu.qiyublogspringboot.entity.Article">
        <id column="id" property="id"/>
        <result column="user_id" property="userId"/>
        <result column="category_id" property="categoryId"/>
        <result column="article_cover" property="articleCover"/>
        <result column="article_title" property="articleTitle"/>
        <result column="article_content" property="articleContent"/>
        <result column="is_top" property="isTop"/>
        <result column="is_draft" property="isDraft"/>
        <result column="is_deleted" property="isDeleted"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
    </resultMap>

    <resultMap id="articleBackResultMap" type="com.luqiyu.qiyublogspringboot.dto.ArticleBackDTO">
        <id column="id" property="id"/>
        <!--        <result column="user_id" property="userId" />-->
        <!--        <result column="category_id" property="categoryId" />-->
        <result column="article_cover" property="articleCover"/>
        <result column="article_title" property="articleTitle"/>
        <!--        <result column="article_content" property="articleContent" />-->
        <result column="is_top" property="isTop"/>
        <result column="is_draft" property="isDraft"/>
        <result column="is_deleted" property="isDeleted"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
        <!-- 特殊字段，是分类表的字段 需要修改为category_name-->
        <result column="category_name" property="categoryName"/>
        <collection property="tagDTOList" ofType="com.luqiyu.qiyublogspringboot.dto.TagDTO">
            <!-- 需要跟sql语句的字段一致 -->
            <id column="tag_id" property="id"/>
            <result column="tag_name" property="name"/>
        </collection>
    </resultMap>

    <resultMap id="articleHomeResultMap" type="com.luqiyu.qiyublogspringboot.dto.ArticleHomeDTO">
        <result column="id" property="id"/>
        <result column="article_cover" property="articleCover"/>
        <result column="article_title" property="articleTitle"/>
        <result column="article_content" property="articleContent"/>
        <result column="create_time" property="createTime"/>
        <result column="category_id" property="categoryId"/>
        <result column="category_name" property="categoryName"/>
        <collection property="tagDTOList" ofType="com.luqiyu.qiyublogspringboot.dto.TagDTO">
            <result column="tag_id" property="id"/>
            <result column="tag_name" property="name"/>
        </collection>
    </resultMap>

    <resultMap id="articleResultMap" type="com.luqiyu.qiyublogspringboot.dto.ArticleDTO">
        <result column="id" property="id"/>
        <result column="article_cover" property="articleCover"/>
        <result column="article_title" property="articleTitle"/>
        <result column="article_content" property="articleContent"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
        <result column="category_id" property="categoryId"/>
        <result column="category_name" property="categoryName"/>
        <collection property="tagDTOList" ofType="com.luqiyu.qiyublogspringboot.dto.TagDTO">
            <result column="tag_id" property="id"/>
            <result column="tag_name" property="name"/>
        </collection>
    </resultMap>

    <resultMap id="ArticlePreviewResultMap" type="com.luqiyu.qiyublogspringboot.dto.ArticlePreviewDTO">
        <result column="id" property="id"/>
        <result column="article_cover" property="articleCover"/>
        <result column="article_title" property="articleTitle"/>
        <result column="create_time" property="createTime"/>
        <result column="category_id" property="categoryId"/>
        <result column="category_name" property="categoryName"/>
        <collection property="tagDTOList" ofType="com.luqiyu.qiyublogspringboot.dto.TagDTO">
            <id column="tag_id" property="id"/>
            <result column="tag_name" property="name"/>
        </collection>
    </resultMap>

    <select id="listArticleBacks" resultMap="articleBackResultMap">
        SELECT
        a.id,
        article_title,
        is_top,
        is_draft,
        a.is_deleted,
        a.create_time,
        a.update_time,
        category_name,
        t.id AS tag_id,
        t.`name` AS tag_name
        FROM
        (
        SELECT
        id,
        article_title,
        is_top,
        is_draft,
        is_deleted,
        create_time,
        update_time,
        category_id
        FROM
        article
        <where>
            <if test="condition.isDeleted!=null">
                is_deleted = #{condition.isDeleted}
            </if>
            <if test="condition.isDraft!=null">
                and is_draft = #{condition.isDraft}
            </if>
            <if test="condition.keywords!=null">
                and article_title like concat('%', #{condition.keywords},"%")
            </if>
        </where>
        ORDER BY is_top DESC,id DESC
        LIMIT #{condition.current},#{condition.size}
        ) a
        LEFT JOIN category c ON a.category_id = c.id
        LEFT JOIN article_tag atg ON a.id=atg.article_id
        LEFT JOIN tag t ON atg.tag_id=t.id
        ORDER BY is_top DESC,a.id DESC
    </select>

    <select id="countArticleBacks" resultType="java.lang.Long">
        SELECT
        count(*)
        FROM
        article
        <where>
            <if test="condition.isDeleted!=null">
                is_deleted = #{condition.isDeleted}
            </if>
            <if test="condition.isDraft != null">
                and is_draft=#{condition.isDraft}
            </if>
            <if test="condition.keywords != null">
                and article_title like concat('%',#{condition.keywords},'%')
            </if>
        </where>
    </select>

    <select id="listArticleRank" resultType="com.luqiyu.qiyublogspringboot.entity.Article">
        SELECT
        id,
        article_title
        FROM
        tb_article
        WHERE
        id IN
        <foreach collection="articleIdList" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
        ORDER BY field
        <foreach collection="articleIdList" item="item" open="(id," separator="," close=")">
            #{item}
        </foreach>
    </select>

    <select id="listArticles" resultMap="articleHomeResultMap">
        -- 再查文章标签，多对多
        SELECT a.id,
               article_cover,
               article_title,
               article_content,
               is_top,
               a.create_time,
               category_id,
               c.category_name,
               atg.tag_id,
               t.`name` AS tag_name
        FROM (-- 先查文章和对应分类，多对一
                 SELECT id,
                        article_cover,
                        article_title,
                        article_content,
                        is_top,
                        a.create_time,
                        category_id
                 FROM article a
                 WHERE is_draft = 0
                   AND is_deleted = 0
                 ORDER BY is_top DESC,
                          id DESC LIMIT #{current}, 10
             ) a
                 -- inner join 目的是只要公共部分不为null的数据，不要值null的数据
                 INNER JOIN category c ON a.category_id = c.id
                 INNER JOIN article_tag atg ON a.id = atg.article_id
                 INNER JOIN tag t ON tag_id = t.id
        ORDER BY is_top DESC,
                 id DESC
    </select>

    <select id="getArticleById" resultMap="articleResultMap">
        SELECT a.id,
               article_cover,
               article_title,
               article_content,
               a.create_time,
               a.update_time,
               a.category_id,
               category_name,
               t.id     AS tag_id,
               t.`name` AS tag_name
        FROM article a
                 INNER JOIN category c ON c.id = a.category_id
                 INNER JOIN article_tag atg ON atg.article_id = a.id
                 INNER JOIN tag t ON t.id = atg.tag_id
        WHERE a.id = #{articleId}
    </select>

    <select id="listArticleRecommends" resultType="com.luqiyu.qiyublogspringboot.dto.ArticleRecommendDTO">
        -- 查询推荐文章，根据文章id查询相同标签下的文章
        SELECT id,
               article_title,
               article_cover,
               create_time
        FROM (-- 再根据查到的文章标签查询除了当前文章之外的所有文章id
                 SELECT DISTINCT  article_id,
                        t.tag_id
                 FROM ( -- 先查询文章标签（会查出全部）
                          SELECT tag_id FROM article_tag WHERE article_tag.article_id = #{articleId}) t
                          JOIN article_tag atg ON atg.tag_id = t.tag_id
                 WHERE article_id != #{articleId}
             ) t1
                 JOIN article a ON a.id = t1.article_id
        WHERE is_draft = 0
          AND is_deleted = 0
        ORDER BY is_top DESC,
                 id DESC LIMIT 6
    </select>

    <select id="listArticlesByCondition" resultMap="ArticlePreviewResultMap">
        SELECT
        tb.id,
        article_title,
        article_cover,
        tb.create_time,
        category_id,
        category_name,
        tag_id,
        t.`name` AS tag_name
        FROM (
        SELECT
        id,
        article_title,
        article_cover,
        create_time,
        category_id
        FROM
        article
        <where>
            <if test="conditionVO.categoryId != null">
                category_id = #{conditionVO.categoryId}
            </if>
            <if test="conditionVO.tagId != null">
                id IN ( SELECT article_id FROM article_tag WHERE tag_id = #{conditionVO.tagId} )
            </if>
        </where>
        AND is_draft = 0
        AND is_deleted = 0
        ORDER BY
        id DESC
        LIMIT #{conditionVO.current} , 9
        ) tb
        INNER JOIN category c ON c.id = tb.category_id
        INNER JOIN article_tag atg ON atg.article_id = tb.id
        INNER JOIN tag t ON t.id = tag_id
    </select>

</mapper>
